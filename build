#!/bin/bash

red="\033[1;31m"
white="\033[1;37m"

if [ $# != 2 ]; then
	echo "Builder needs 3 parameters :"
	echo " - (1) adress of the git"
	echo " - (2) name of the package"
	#echo " - (3) tag to know where the builder has to copy"
	exit 100
fi

echo "**************************************************"
echo "           Starting package creation             *"
echo "**************************************************"
echo ""

echo "[INFO] Cloning git : $1"
git clone $1
cd $2
rm -rf .git

# *****************************************************************************
echo "[INFO] Check if DEBIAN/ and DEBIAN/control exist"
if [ -d "DEBIAN" ]; then
	cd DEBIAN
	if [ -e "control" ]; then
		cd ..
	else
		echo -e "$red[ERR-200] There is not a file 'control' in DEBIAN/$white"
		cd ../..
		rm -rf $2
		exit 200
	fi
else
	echo -e "$red[ERR-300] There is not a directory 'DEBIAN/'$white"
	cd ..
	rm -rf $2
	exit 300
fi
# *****************************************************************************


# Creating our directories for sources and executables
mkdir -p usr/local/bin
mkdir -p opt/packebian/$2

echo "[INFO] Check if there is a 'makefile'"
if [ -e "makefile" ]; then
	for file in *; do
		if [ "$file" != "DEBIAN" -a "$file" != "opt" -a "$file" != "usr" ]; then
			mv $file opt/packedian/$2
		fi
	done
	cd opt/packedian/$2
	echo "[INFO] Compilation of sources"
	make
	for file in *; do
		if [ -x "$file" ]; then
			mv $file ../../../usr/local/bin
		fi
	done
	cd ../../..
elif [ -e "pom.xml" ]; then
	echo "[INFO] Maven project"
	mvn install
	if [ ! -e "target/$2.jar" ]; then
		echo -e "$red[ERR-600] There is not $2.jar in target/$white"
		exit 600
	fi
	for $file in *; do
                if [ "$file" != "DEBIAN" -a "$file" != "opt" -a "$file" != "usr" ]; then
                        mv $file opt/packebian/$2
                fi
        done
	touch $2
	chmod u+x $2
	echo '#!/bin/bash' > $2
	echo "" >> $2
	echo "java -jar ../../../opt/packebian/$2/target/$2.jar" >> $2
	mv $2 usr/local/bin
elif [ -e "build.xml" ]; then
	echo "[INFO] Ant project"
	ant run
	if [ ! -e "build/jar/$2.jar" ]; then
		echo -e "$red[ERR-700] There is not $2.jar in build/jar/$white"
		exit 700
	fi
	for $file in *; do
		if [ "$file" != "DEBIAN" -a "$file" != "opt" -a "$file" != "usr" ]; then
			mv $file opt/packebian/$2
		fi
	done
	touch $2
	chmod u+x $2
	echo '#!/bin/bash' > $2
	echo "" >> $2
	echo "java -jar ../../../opt/packebian/$2/build/jar/$2.jar" >> $2
	mv $2 usr/local/bin
elif [ -e "build.gradle" ]; then
	echo "[INFO] Gradle project"
	gradle build
	if [ ! -e "build/libs/$2.jar" ];  then
		echo -e "$red[ERR-800] There is not $2.jar in build/libs/$white"
		exit 800
	fi
	for $file in *; do
		if [ "$file" != "DEBIAN" -a "$file" != "opt" -a "$file" != "usr" ]; then
			mv $file opt/packebian/$2
		fi
	done
	touch $2
	chmod u+x $2
        echo '#!/bin/bash' > $2
        echo "" >> $2
        echo "java -jar ../../../opt/packebian/$2/build/libs/$2.jar" >> $2
        mv $2 usr/local/bin
elif [ `ls | wc -l` -gt 0 ]; then
	for file in *; do
		if [ -x "$file" ]; then
			mv $file usr/local/bin
		else
			mv $file opt/packedian/$2
		fi
	done
	if [ `ls opt/packebian/$2 | wc -l` = 0 ]; then
		rm -rf opt
	fi
	if [ `ls usr/local/bin | wc -l` = 0]; then
		cd ..
		rm -rf $2
		echo -e "$red[ERR-500] No executable were found$white"
		exit 500
	fi
else
	echo -e "$red[ERR-400] Git repository was not build as recommended or the builder is not configured$white"
	cd ..
	rm -rf $2
	exit 400
fi

cd ..
echo "[INFO] Creation of the package"
dpkg-deb --build $2

rm -rf $2

echo ""
echo "**************************************************"
echo "             Ending package creation              *"
echo "**************************************************"
